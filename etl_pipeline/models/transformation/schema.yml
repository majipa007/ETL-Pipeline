version: 2

# defining the sources
sources:
  - name: trans #logical name for the source
    schema: public # name of the schema
    tables:
      - name: staging_patient_visits
        description: "raw data tha is loaded from teh csv"
        columns:
          - name: patient_id
            description: "Unique identifier for each patient."
            tests:
              - not_null
models:
  - name: dim_patients
    description: "Dimension table containing patient information"
    columns:
      - name: patient_id
        description: "Unique identifier for each patient."
        tests:
          - not_null
          - unique
      - name: patient_name
        description: "Full name of the patient."
        tests:
          - not_null
  - name: dim_doctors
    description: "Dimension table containing doctor information"
    columns:
      - name: doctor
        description: "Full name of the doctor"
        tests:
          - not_null
      - name: department
        description: "Specialization of the doctor"
        tests:
          - not_null
  - name: dim_bra
    description: "This table contains information about hospital branches, including branch name, department, and total revenue."
    columns:
      - name: branch_id
        description: "Unique identifier for the hospital branch (surrogate key)."
        tests:
          - not_null
          - unique

      - name: hospital_branch
        description: "Name of the hospital branch (e.g., East, West, Central)."
        tests:
          - not_null

      - name: department
        description: "Department within the hospital (e.g., General, ER, Neurology, etc.)."
        tests:
          - not_null

      - name: total_revenue
        description: "Total revenue generated by the hospital branch across all visits."
        tests:
          - not_null
          - relationships:
              to: ref('fact_revenue')  # Ensures that total_revenue exists in fact_revenue (fact table)

  - name: fact_patient_visits
    description: "Fact table containing patient visit records including revenue, service metrics, and links to dimensional data"
    columns:
      - name: doctor_id
        description: "Surrogate key linking to the doctors dimension table"
        tests:
          - not_null
          - relationships:
              to: ref('dim_doctors')
              field: doctor_id

      - name: branch_id
        description: "Surrogate key linking to the hospital branches dimension table"
        tests:
          - not_null
          - relationships:
              to: ref('dim_branches')
              field: branch_id

      - name: risk_id
        description: "Surrogate key linking to the patient risk profiles dimension table"
        tests:
          - not_null
          - relationships:
              to: ref('dim_risk')
              field: risk_id

      - name: row_id
        description: "Unique identifier for each patient visit record"
        tests:
          - unique
          - not_null

      - name: patient_id
        description: "Natural key linking to the patients dimension table"
        tests:
          - not_null
          - relationships:
              to: ref('dim_patients')
              field: patient_id

      - name: date_of_admit
        description: "Date when the patient was admitted"
        tests:
          - not_null
          - dbt_utils.date_in_valid_range:
              maximum_date: "{{ var('max_date') }}"
              minimum_date: "{{ var('min_date') }}"

      - name: date_of_discharge
        description: "Date when the patient was discharged"
        tests:
          - dbt_utils.date_in_valid_range:
              maximum_date: "{{ var('max_date') }}"
              minimum_date: "{{ var('min_date') }}"

      - name: department
        description: "Department where the patient received treatment"
        tests:
          - not_null
          - accepted_values:
              values: ['General Surgery', 'Microbiology']  # Add all valid departments

      - name: revenue
        description: "Revenue generated from the patient visit"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: minutes_to_service
        description: "Time taken to provide service to the patient in minutes"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 0"

      - name: number_of_patient_visits
        description: "Count of visits for this patient record"
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: ">= 1"

    tests:
      - dbt_utils.expression_is_true:
          expression: "date_of_discharge >= date_of_admit"
          where: "date_of_discharge is not null"
